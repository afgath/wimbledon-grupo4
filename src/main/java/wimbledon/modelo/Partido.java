package wimbledon.modelo;
// Generated 15/11/2018 09:04:19 PM by Hibernate Tools 4.3.5.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Partido generated by hbm2java
 */
@Entity
@Table(name = "partido", schema = "public")
public class Partido implements java.io.Serializable {

	private long idpartido;
	private Cancha cancha;
	private Draw draw;
	private Equipo equipoByEquipoganador;
	private Equipo equipoByEquipo2;
	private Equipo equipoByEquipo1;
	private Jugador jugadorByJugador2;
	private Jugador jugadorByJugadorganador;
	private Jugador jugadorByJugador1;
	private Ronda ronda;
	private Date fecha;
	private String set1;
	private String set2;
	private String set3;
	private Set<Reservacancha> reservacanchas = new HashSet<Reservacancha>(0);

	public Partido() {
	}

	public Partido(long idpartido) {
		this.idpartido = idpartido;
	}

	public Partido(long idpartido, Cancha cancha, Draw draw, Equipo equipoByEquipoganador, Equipo equipoByEquipo2,
			Equipo equipoByEquipo1, Jugador jugadorByJugador2, Jugador jugadorByJugadorganador,
			Jugador jugadorByJugador1, Ronda ronda, Date fecha, String set1, String set2, String set3,
			Set<Reservacancha> reservacanchas) {
		this.idpartido = idpartido;
		this.cancha = cancha;
		this.draw = draw;
		this.equipoByEquipoganador = equipoByEquipoganador;
		this.equipoByEquipo2 = equipoByEquipo2;
		this.equipoByEquipo1 = equipoByEquipo1;
		this.jugadorByJugador2 = jugadorByJugador2;
		this.jugadorByJugadorganador = jugadorByJugadorganador;
		this.jugadorByJugador1 = jugadorByJugador1;
		this.ronda = ronda;
		this.fecha = fecha;
		this.set1 = set1;
		this.set2 = set2;
		this.set3 = set3;
		this.reservacanchas = reservacanchas;
	}

	@Id

	@Column(name = "idpartido", unique = true, nullable = false)
	public long getIdpartido() {
		return this.idpartido;
	}

	public void setIdpartido(long idpartido) {
		this.idpartido = idpartido;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "cancha")
	public Cancha getCancha() {
		return this.cancha;
	}

	public void setCancha(Cancha cancha) {
		this.cancha = cancha;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "draw")
	public Draw getDraw() {
		return this.draw;
	}

	public void setDraw(Draw draw) {
		this.draw = draw;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "equipoganador")
	public Equipo getEquipoByEquipoganador() {
		return this.equipoByEquipoganador;
	}

	public void setEquipoByEquipoganador(Equipo equipoByEquipoganador) {
		this.equipoByEquipoganador = equipoByEquipoganador;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "equipo2")
	public Equipo getEquipoByEquipo2() {
		return this.equipoByEquipo2;
	}

	public void setEquipoByEquipo2(Equipo equipoByEquipo2) {
		this.equipoByEquipo2 = equipoByEquipo2;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "equipo1")
	public Equipo getEquipoByEquipo1() {
		return this.equipoByEquipo1;
	}

	public void setEquipoByEquipo1(Equipo equipoByEquipo1) {
		this.equipoByEquipo1 = equipoByEquipo1;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "jugador2")
	public Jugador getJugadorByJugador2() {
		return this.jugadorByJugador2;
	}

	public void setJugadorByJugador2(Jugador jugadorByJugador2) {
		this.jugadorByJugador2 = jugadorByJugador2;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "jugadorganador")
	public Jugador getJugadorByJugadorganador() {
		return this.jugadorByJugadorganador;
	}

	public void setJugadorByJugadorganador(Jugador jugadorByJugadorganador) {
		this.jugadorByJugadorganador = jugadorByJugadorganador;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "jugador1")
	public Jugador getJugadorByJugador1() {
		return this.jugadorByJugador1;
	}

	public void setJugadorByJugador1(Jugador jugadorByJugador1) {
		this.jugadorByJugador1 = jugadorByJugador1;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ronda")
	public Ronda getRonda() {
		return this.ronda;
	}

	public void setRonda(Ronda ronda) {
		this.ronda = ronda;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "fecha", length = 29)
	public Date getFecha() {
		return this.fecha;
	}

	public void setFecha(Date fecha) {
		this.fecha = fecha;
	}

	@Column(name = "set1", length = 10)
	public String getSet1() {
		return this.set1;
	}

	public void setSet1(String set1) {
		this.set1 = set1;
	}

	@Column(name = "set2", length = 10)
	public String getSet2() {
		return this.set2;
	}

	public void setSet2(String set2) {
		this.set2 = set2;
	}

	@Column(name = "set3", length = 10)
	public String getSet3() {
		return this.set3;
	}

	public void setSet3(String set3) {
		this.set3 = set3;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "partido")
	public Set<Reservacancha> getReservacanchas() {
		return this.reservacanchas;
	}

	public void setReservacanchas(Set<Reservacancha> reservacanchas) {
		this.reservacanchas = reservacanchas;
	}

}
