package wimbledon.modelo;
// Generated 15/11/2018 09:04:19 PM by Hibernate Tools 4.3.5.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Equipo generated by hbm2java
 */
@Entity
@Table(name = "equipo", schema = "public")
public class Equipo implements java.io.Serializable {

	private long idequipo;
	private Jugador jugadorByJugador1;
	private Jugador jugadorByJugador2;
	private Set<Drawintegrantes> drawintegranteses = new HashSet<Drawintegrantes>(0);
	private Set<Partido> partidosForEquipoganador = new HashSet<Partido>(0);
	private Set<Partido> partidosForEquipo2 = new HashSet<Partido>(0);
	private Set<Partido> partidosForEquipo1 = new HashSet<Partido>(0);

	public Equipo() {
	}

	public Equipo(long idequipo) {
		this.idequipo = idequipo;
	}

	public Equipo(long idequipo, Jugador jugadorByJugador1, Jugador jugadorByJugador2,
			Set<Drawintegrantes> drawintegranteses, Set<Partido> partidosForEquipoganador,
			Set<Partido> partidosForEquipo2, Set<Partido> partidosForEquipo1) {
		this.idequipo = idequipo;
		this.jugadorByJugador1 = jugadorByJugador1;
		this.jugadorByJugador2 = jugadorByJugador2;
		this.drawintegranteses = drawintegranteses;
		this.partidosForEquipoganador = partidosForEquipoganador;
		this.partidosForEquipo2 = partidosForEquipo2;
		this.partidosForEquipo1 = partidosForEquipo1;
	}

	@Id

	@Column(name = "idequipo", unique = true, nullable = false)
	public long getIdequipo() {
		return this.idequipo;
	}

	public void setIdequipo(long idequipo) {
		this.idequipo = idequipo;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "jugador1")
	public Jugador getJugadorByJugador1() {
		return this.jugadorByJugador1;
	}

	public void setJugadorByJugador1(Jugador jugadorByJugador1) {
		this.jugadorByJugador1 = jugadorByJugador1;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "jugador2")
	public Jugador getJugadorByJugador2() {
		return this.jugadorByJugador2;
	}

	public void setJugadorByJugador2(Jugador jugadorByJugador2) {
		this.jugadorByJugador2 = jugadorByJugador2;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "equipo")
	public Set<Drawintegrantes> getDrawintegranteses() {
		return this.drawintegranteses;
	}

	public void setDrawintegranteses(Set<Drawintegrantes> drawintegranteses) {
		this.drawintegranteses = drawintegranteses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "equipoByEquipoganador")
	public Set<Partido> getPartidosForEquipoganador() {
		return this.partidosForEquipoganador;
	}

	public void setPartidosForEquipoganador(Set<Partido> partidosForEquipoganador) {
		this.partidosForEquipoganador = partidosForEquipoganador;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "equipoByEquipo2")
	public Set<Partido> getPartidosForEquipo2() {
		return this.partidosForEquipo2;
	}

	public void setPartidosForEquipo2(Set<Partido> partidosForEquipo2) {
		this.partidosForEquipo2 = partidosForEquipo2;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "equipoByEquipo1")
	public Set<Partido> getPartidosForEquipo1() {
		return this.partidosForEquipo1;
	}

	public void setPartidosForEquipo1(Set<Partido> partidosForEquipo1) {
		this.partidosForEquipo1 = partidosForEquipo1;
	}

}
